<?php

/**
 * @file
 * This is the module for creating a block to take MyEmma newsletter
 * registrations.
 */

/**
 * Implementation of hook_menu().
 */
function emma_block_menu() {
  $items = array();
  $items['admin/settings/emma_block'] = array(
    'title' => 'Emma block',
    'description' => 'The index of all available lists.',
    'page callback' => 'emma_block_list_grid',
    'access callback' => 'user_access',
    'access arguments' => array('administer emma block lists'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/emma_block/list'] = array(
    'title' => 'Mailing list index',
    'description' => 'The index of all available lists.',
    'page callback' => 'emma_block_list_grid',
    'access callback' => 'user_access',
    'access arguments' => array('administer emma block lists'),
    'weight' => -2,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/settings/emma_block/add'] = array(
    'title' => 'Add mailing list',
    'description' => 'Add a mailing list to the database.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('emma_block_list_form'),
    'access callback' => 'user_access',
    'access arguments' => array('add new emma block list'),
    'weight' => -1,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/emma_block/settings'] = array(
    'title' => 'Settings',
    'description' => 'Configuration Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('emma_block_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer emma block settings'),
    'weight' => -1,
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/emma_block/edit/%emma_block_list'] = array(
    'title' => 'Edit mailing list',
    'description' => 'Make modifications to an existing mailing list.',
    'page callback' => 'emma_block_edit_list',
    'page arguments' => array(4),
    'access callback' => 'user_access',
    'access arguments' => array('edit emma block lists'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/settings/emma_block/delete/%emma_block_list'] = array(
    'title' => 'Delete mailing list',
    'description' => 'Remove a mailing list from the repertoire.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('emma_block_delete_confirm', 4),
    'access callback' => 'user_access',
    'access arguments' => array('delete emma block lists'),
    'type' => MENU_CALLBACK,
  );
  $items['mailing-list/register'] = array(
    'title' => 'Sign up for our Mailing List',
    'page callback' => 'emma_block_mailing_list',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function emma_block_list_load($id) {
  if (is_numeric($id)) {
    $result = db_query("SELECT * FROM {emma_block} WHERE id='%d'", $id);
    $list = db_fetch_object($result);
    return $list;
  } 
  else {
    return FALSE;
  }
}

function emma_block_mailing_list() {
  $form = drupal_get_form('emma_block_subscribe_form');
  $output = theme('emma_block_mailing_list',$form);
  return $output;
} 

function emma_block_theme($existing, $type, $theme, $path) {
  return array(
    'emma_block_mailing_list' => array(
      'arguments' => array('form' => NULL),
      'template' => 'emma-block-mailing-list',
    ),
  );
}

/**
 * Implementation of hook_perm().
 */
function emma_block_perm() {
  return array('administer emma block lists', 'add new emma block list', 
               'edit emma block lists', 'delete emma block lists',
               'administer emma block settings');
}

/**
 * this is our interface for listing all of the available mailing lists (that have been added)
 */
function emma_block_list_grid() {
  $i = 0;
  $rows = array();
  $header = array(t('List name'), t('Signup post'), t('Account ID'), t('Username'), t('Password'), t('Group ID'), t('Edit'), t('Delete'));
  
  $result = db_query('SELECT * FROM {emma_block} ORDER BY list_name ASC');
  while ($data = db_fetch_object($result)) {
    $row = array();
    $row[] = $data->list_name;
    $row[] = $data->signup_post;
    $row[] = $data->account_id;
    $row[] = $data->username;
    $row[] = $data->password;
    $row[] = $data->group_id;
    $row[] = l(t('Edit'), 'admin/settings/emma_block/edit/' . $data->id);
    $row[] = l(t('Delete'), 'admin/settings/emma_block/delete/' . $data->id);
    $rows[] = $row;
  }
  
  if (count($rows) == 0) {
    $rows = array(
      array(
        'data' => array(array('align' => 'center', 'colspan' => 8, 'data' => t('THERE ARE CURRENTLY NO CONFIGURED MAILING LISTS')))
      ),
    );
  }
  $output = theme('table', $header, $rows);
  return $output;
}

/**
 * callback function for handling the form that takes detailed Emma list
 * information for each mailing list
 */
function emma_block_list_form($form_state, $list = NULL) {
  $form['list'] = array(
    '#type' => 'fieldset', 
    '#title' => t('Mailing list information')
  );
  $form['list']['id'] = array(
    '#type' => 'hidden',
    '#default_value' => $list->id,
  );
  $form['list']['emma_block_list_name'] = array(
    '#type' => 'textfield',
    '#title' => t('List name'),
    '#default_value' => $list->list_name,
    '#max_length' => 32,
    '#required' => TRUE,
  );
  $form['list']['emma_block_signup_post'] = array(
    '#type' => 'textfield',
    '#title' => t('Signup post'),
    '#default_value' => $list->signup_post,
    '#max_length' => 10,
    '#required' => TRUE,
  );
  $form['list']['emma_block_account_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Emma account ID'),
    '#default_value' => $list->account_id,
    '#max_length' => 10,
    '#required' => TRUE,
  );
  $form['list']['emma_block_username'] = array(
    '#type' => 'textfield',
    '#title' => t('Username'),
    '#default_value' => $list->username,
    '#max_length' => 32,
    '#required' => TRUE,
  );
  $form['list']['emma_block_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#default_value' => $list->password,
    '#max_length' => 32,
    '#required' => TRUE,
  );
  $form['list']['emma_block_group_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Group ID'),
    '#default_value' => $list->group_id,
    '#max_length' => 16,
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  $form['#redirect'] = array('admin/settings/emma_block');
  return $form;
}

function emma_block_list_form_submit($form, $form_state) {

  if ($form_state['values']['id'] > 0) {
    $array = array(
      'id' => $form_state['values']['id'],
      'list_name' => $form_state['values']['emma_block_list_name'],
      'signup_post' => $form_state['values']['emma_block_signup_post'],
      'account_id' => $form_state['values']['emma_block_account_id'],
      'username' => $form_state['values']['emma_block_username'],
      'password' => $form_state['values']['emma_block_password'],
      'group_id' => $form_state['values']['emma_block_group_id'],
    );
    $result = drupal_write_record('emma_block', $array, 'id');
    if ($result == FALSE) {
      drupal_set_message(t('The emma list information provided could not be saved.'), 'error');
    }
    else {
      drupal_set_message(t('Emma list successfully updated.'));
    }
  }
  else {
    $array = array(
      'list_name' => $form_state['values']['emma_block_list_name'],
      'signup_post' => $form_state['values']['emma_block_signup_post'],
      'account_id' => $form_state['values']['emma_block_account_id'],
      'username' => $form_state['values']['emma_block_username'],
      'password' => $form_state['values']['emma_block_password'],
      'group_id' => $form_state['values']['emma_block_group_id'],
    );
  
    $result = drupal_write_record('emma_block', $array);
    if ($result == FALSE) {
      drupal_set_message(t('The Emma list information provided could not be saved.'), 'error');
    }
    else {
      drupal_set_message(t('Emma list successfully added.'));
    }
  }
}

function emma_block_edit_list($list) {
  return drupal_get_form('emma_block_list_form', $list);
}

function emma_block_delete_confirm($form_state, $list) {
  $form = array();
  $form['list'] = array('#type' => 'hidden', '#value' => $list->id);
  $form['#redirect'] = array('admin/settings/emma_block');
  return confirm_form( $form,
                       t('Are you sure you wish to delete the list %list?', array('%list' => $list->list_name)),
                       'admin/settings/emma_block',
                       t('This action cannot be undone.'),
                       t('Delete'),
                       t('Cancel')
                     );
}

function emma_block_delete_confirm_submit($form_state, $form) {
  $list = emma_block_list_load((int) $form['values']['list']);
  db_query("DELETE FROM {emma_block} WHERE id='%d'", (int) $form['values']['list']);
  drupal_set_message(t('%list successfully deleted', array('%list' => $list->list_name)));
}

function emma_block_form_alter(&$form, $form_state, $form_id) {
  if (variable_get('emma_block_module_enabled',1) == 1 &&
      variable_get('emma_block_account_creation_enabled',1) == 1) {
    switch($form_id) {
      case 'user_register':
        /* initialize our arrays */
        $lists = array();
        $list_options = array();
        $result = db_query('SELECT id,list_name FROM {emma_block} ORDER BY list_name');
          while ($data = db_fetch_object($result)) {
            $list_name = $data->list_name;
            $list_value = $data->id;
            $list = array( $list_value => $list_name );
            $list_options[] = $list_value;
            $lists += $list;
          }
        $form['mailing_list'] = array(
          '#type' => 'fieldset',
          '#title' => variable_get('emma_block_mailing_list_header','Mailing lists'),
        );
        $form['mailing_list']['list'] = array(
          '#title' => t(''),
          '#description' => variable_get('emma_block_mailing_list_description','Sign up for one of our mailing lists by checking the appropriate box above'),
          '#type' => 'checkboxes',
          '#default_value' => $list_options,
          '#options' => $lists,
        );
        break;
      default:
        break;
    }
  }
}
    
function emma_block_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'insert') {
  	$form_state = array(
  	  'email_address' => $edit['mail'],
  	  'first_name' => NULL, /* no name field on default drupal block */
  	  'last_name' => NULL,  /* no name field on default drupal block */
  	);
  	foreach( $edit['list'] as $lid => $lv ) {
      emma_block_subscribe_member( $lid,$form_state );
  	}
  }  
}

/**
 * Implementation of hook_block().
 */
function emma_block_block( $op = 'list', $delta = 0) {
  $block = array();
  if (variable_get('emma_block_module_enabled',1) == 1) {
    if ($op == 'list') {
      $block[1]['info'] = t('Emma integration block');
    }
    elseif ($op == 'view' ) {
      $block['subject'] = t('Mailing list sign-up');
      $block['content'] = drupal_get_form('emma_block_subscribe_form');
    }
  }
  return $block;
}

function emma_block_settings($form_state) {
  $form = array();
  $form['general'] = array(
    '#type' => 'fieldset',
    '#title' => t('General settings'),
    '#weight' => 0,
  );
  $form['registration'] = array(
    '#type' => 'fieldset', 
    '#title' => t('Subscription on registration settings'),
    '#weight' => 1,
  );
  $form['general']['module_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Emma registrations'),
    '#default_value' => variable_get('emma_block_module_enabled',1),
  );
  $form['registration']['account_creation_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Allow mailing list sign-up during user account creation'),
    '#default_value' => variable_get('emma_block_account_creation_enabled',1),
  );
  $form['registration']['mailing_list_header'] = array(
    '#type' => 'textfield',
    '#title' => t('Block header title for mailing list section on account creation page'),
    '#default_value' => variable_get('emma_block_mailing_list_header','Mailing lists'),
    '#size' => 60,
    '#maxlength' => 64,
    '#required' => FALSE,
  );
  $form['registration']['mailing_list_description'] = array(
    '#type' => 'textfield',
    '#title' => t('Description of mailing lists on account creation page'),
    '#default_value' => variable_get('emma_block_mailing_list_description','Sign up for one of our mailing lists by checking the appropriate box above'),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => FALSE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Update settings'),
    '#weight' => 3,
  );
  return $form;
}

function emma_block_settings_submit($form, $form_state) {
  if (strlen($form_state['values']['mailing_list_header']) < 1) {
    $form_state['values']['mailing_list_header'] = t('Mailing lists');
  }
  variable_set('emma_block_module_enabled', $form_state['values']['module_enabled']);
  variable_set('emma_block_account_creation_enabled', $form_state['values']['account_creation_enabled']);
  variable_set('emma_block_mailing_list_header', $form_state['values']['mailing_list_header']);
  variable_set('emma_block_mailing_list_description', $form_state['values']['mailing_list_description']);
  drupal_set_message('Emma Block settings have been successfully updated');
  return TRUE;
}

/**
 * the subscription form to be placed inside the block
 */
function emma_block_subscribe_form($form_state) {
  $form = array();
  $form['first_name'] = array(
    '#title' => t('First name'),
    '#type' => 'textfield',
    '#size' => '20',
    '#required' => TRUE,
    '#maxlength' => 32,
  );
  $form['last_name'] = array(
    '#title' => t('Last name'),
    '#type' => 'textfield',
    '#size' => '20',
    '#required' => TRUE,
    '#maxlength' => 32,
  );
  $form['email_address'] = array(
    '#title' => t('Email address'),
    '#type' => 'textfield',
    '#size' => '20',
    '#maxlength' => 128,
    '#required' => TRUE,
  );
  
  /* initialize our arrays */
  $lists = array();
  $list = array();
  
  /**
   * get the number of mailing lists currently in our database
   */
  $result = db_query('SELECT COUNT(*) AS number_of_rows FROM {emma_block}');
  $number_of_rows = db_result($result);
  
  /**
   * cycle through the lists. if we only have one list, then don't display the checkbox
   * mechanism for selecting list(s)
   */
  $result = db_query('SELECT id,list_name FROM {emma_block} ORDER BY list_name');
  if ($number_of_rows > 1) {
    while ($data = db_fetch_object($result)) {
      $list_name = $data->list_name;
      $list_value = $data->id;
      $list = array( $list_value => $list_name );
      $lists += $list;
    }
    $form['list'] = array(
      '#title' => t('Mailing list'),
      '#type' => 'checkboxes',
      '#options' => $lists,
    );
  }
  else {
    $list = db_fetch_object($result);
    $form['list'] = array(
      '#type' => 'hidden',
      '#value' => $list->id
    );
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

/**
 * handle form submissions, check to make sure an email address has been
 * provided and if so, subscribe them to the selected list.
 */
function emma_block_subscribe_form_submit($form, &$form_state) {
  if ($form_state['values']['email_address']) {
    if (is_array( $form_state['values']['list'] ) ) {
      foreach ($form_state['values']['list'] as $list_id => $list_value) {
        if (isset($list_value) && $list_value > 0) {
          emma_block_subscribe_member($list_value, $form_state);
        }
      }
    }
    else {
      emma_block_subscribe_member($form_state['values']['list'], $form_state);
    }
  }
}

/**
 * do the actual subscription based on the id of the list we're using
 */
function emma_block_subscribe_member( $list_id, $form_state ) {
  $list = emma_block_list_load($list_id);
  $post  = 'signup_post=' . $list->signup_post . '&emma_account_id=' . $list->account_id . '&';
  $post .= 'username=' . $list->username . '&password=' . rawurlencode($list->password) . '&group[' . $list->group_id. ']=1&';
  $post .= 'emma_member_email=' . $form_state['values']['email_address'] . '&';
  $post .= 'emma_member_name_first=' . $form_state['values']['first_name'] . '&';
  $post .= 'emma_member_name_last=' . $form_state['values']['last_name'] . '';
 
  /**
   * we need to do this directly with curl because drupal_http_request cannot parse
   * Emma's api url properly and throws errors
   */
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, "https://app.e2ma.net/app/view:RemoteSignup");
  curl_setopt($ch, CURLOPT_POST, 1);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $post);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
  $response_code = curl_exec($ch);
  curl_close($ch);
  
  switch ($response_code) {
    case 1:
      $message = t('You have been successfully registered to %listname', array('%listname' => $list->list_name));
      break;
      
    case 2:
      $message = t('Your subscription has been successfully updated on %listname', array('%listname' => $list->list_name));
      break;
    
    case 3:
      $message = t('A user with that information already exists on %listname', array('%listname' => $list->list_name));
      break;
    
    case 4:
      $message = t('Your membership has been successfully removed from %listname', array('%listname' => $list->list_name));
      break;
    
    case -1:
      $message = t('Emma authentication failure: %listname', array('%listname' => $list->list_name));
      break;
    
    case -2:
    case -3:
    case -5:
      $message = t('Your subscription could not be processed.');
      break;
    
    case -6:
      $message = t('The email address provided was not valid.');
      break;
    
    default:
      $message = t('An unknown error occurred while trying to register for %listname', array('%listname' => $list->list_name));
      break;
  }
  drupal_set_message($message);
}

